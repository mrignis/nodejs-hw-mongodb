openapi: 3.1.0
info:
  version: 1.0.0
  title: Node.js HW MongoDB API
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  description: >
    API documentation for the Node.js HW MongoDB application.
tags:
  - name: Contacts
    description: Operations related to contacts.
servers:
  - url: https://nodejs-hw-mongodb-25ob.onrender.com
    description: Local development server.
  - url: https://nodejs-hw-mongodb-25ob.onrender.com
    description: Deployed production server.
paths:
  /contacts/{contactId}:
    $ref: ..\src\swagger\paths\contacts\{id}\get.yaml
  /contacts: 
    get:
      $ref: ../src/swagger/paths/contacts/get.yaml
    post: 
      tags:
        - Contacts
      summary: Create a new contact
      operationId: createContact
      description: Create a new contact
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewContact'
      responses:
        '201':
          description: Created contact
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: string
        '401':
          $ref: ..\src\swagger\components\responses\401.yaml
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  schemas:
    Contact:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        phoneNumber:
          type: string
        email:
          type: string
        isFavourite:
          type: boolean
        contactType:
          type: string
        userId:
          type: string
        photo:
          type: string
      required:
        - id
        - name
        - phoneNumber
        - email
        - userId
    NewContact:
      type: object
      properties:
        name:
          type: string
        phoneNumber:
          type: string
        email:
          type: string
        isFavourite:
          type: boolean
        contactType:
          type: string
        photo:
          type: string
      required:
        - name
        - phoneNumber
        - email
